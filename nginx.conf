#user  nobody;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

events {
  worker_connections 2048;
  multi_accept       on;
  use                epoll;
}

http {
  sendfile           on;
  tcp_nopush         on;
  tcp_nodelay        on;
  keepalive_timeout  15;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;

  gzip on;
  gzip_vary on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml application/javascript application/x-javascript application/xml;
  gzip_disable "MSIE [1-6]\.";

  server {
    listen *:80;
    server_name styled-charts;
    client_max_body_size 20M;
;     client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)
    chunkin on;
    error_page 411 = @my_411_error;
    location @my_411_error {
      chunkin_resume;
    }

    location ~* \.(css|js|jpg|jpeg|gif|png|ico|xml)$ {
      expires           30d;
      add_header Pragma public;
      add_header Cache-Control "public";
      rewrite ^/css/[0-9]+/(.*) /css/$1 last;
      rewrite ^/js/[0-9]+/(.*) /js/$1 last;
      try_files $uri $uri/ /index.php?$query_string;
    }

    open_file_cache          max=2000 inactive=20s;
    open_file_cache_valid    60s;
    open_file_cache_min_uses 5;
    open_file_cache_errors   off;
    error_page 500 502 503 504 /50x.html;

    location / {
      proxy_pass         http://localhost:3000/;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
      proxy_set_header   X-Forwarded-Proto $scheme;

      # Set this so that the app updates function doesn't timeout
      proxy_read_timeout 300s;
      proxy_connect_timeout 300s;
      proxy_send_timeout 300s;
      send_timeout 300s;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "Upgrade";

      client_body_temp_path /var/www/client_body_temp;
      proxy_temp_path /var/www/proxy_temp;
    }

    location = /50x.html {
      root /usr/share/nginx/html;
    }

    location ~ /\.ht {
      deny all;
    }

    location ~* \.(xml|ini)$ {
      deny all;
    }
  }
}
